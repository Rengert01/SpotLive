services:
  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=sergiopeixoto3@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  spotlive:
    build:
      context: ./frontend/
      dockerfile: Dockerfile.prod
    volumes:
      - ./frontend/src:/app/frontend/src
      - ./frontend/public:/app/frontend/public
      - ./frontend/package.json:/app/frontend/package.json
      - ./frontend/package-lock.json:/app/frontend/package-lock.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.spotlive.rule=Host(`les-test.francecentral.cloudapp.azure.com`)"
      - "traefik.http.routers.spotlive.entrypoints=websecure"
      - "traefik.http.routers.spotlive.tls.certresolver=myresolver"
      - "traefik.http.services.spotlive.loadbalancer.server.port=80"
    deploy:
      mode: replicated
      replicas: 3
    env_file:
      - ./frontend/.env
    command: npm run preview

  api:
    build:
      context: ./backend/
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
      - ./backend/src:/app/backend/src
      - ./backend/package.json:/app/backend/package.json
      - ./backend/package-lock.json:/app/frontend/package-lock.json
    command: npm run start
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`les-test.francecentral.cloudapp.azure.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.api.loadbalancer.server.port=9000"
    env_file:
      - ./backend/.env

volumes:
  letsencrypt:
