version: "3"
services:
  web:
    build: ./frontend/
    ports:
      - "${VITE_APP_PORT}:${VITE_APP_PORT}"
    volumes:
      - ./frontend/src:/app/frontend/src
      - ./frontend/public:/app/frontend/public
      - ./frontend/package.json:/app/frontend/package.json
      - ./frontend/package-lock.json:/app/frontend/package-lock.json
    stdin_open: true
    tty: true
    environment:
      VITE_APP_PORT: ${VITE_APP_PORT:?}

  api:
    build:
      context: ./backend/
      dockerfile: Dockerfile
      additional_contexts:
        assets: ./
    restart: unless-stopped
    depends_on:
      - "db"
    volumes:
      - ./backend:/app/backend
    environment:
      NODE_ENV: ${NODE_ENV:?}
      BACKEND_API_PORT: ${BACKEND_API_PORT:?}
      POSTGRES_DB: ${POSTGRES_DB:?}
      POSTGRES_USER: ${POSTGRES_USER:?}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
      POSTGRES_PORT: ${POSTGRES_PORT:?}
      POSTGRES_HOST: ${POSTGRES_HOST:?}
      DB_LOGGING: ${DB_LOGGING:?}
      SESSION_SECRET: ${SESSION_SECRET:?}
    expose:
      - "${BACKEND_API_PORT}"
    ports:
      - "${BACKEND_API_PORT}:${BACKEND_API_PORT}"
    command: npm run dev
      
  db:
    build:
      context: ./backend/src/database/
      dockerfile: Dockerfile
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 60s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
      POSTGRES_USER: ${POSTGRES_USER:?}
      POSTGRES_DB: ${POSTGRES_DB:?}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:?}
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD:?}
    ports:
      - "5050:80"

volumes:
  postgres-data:
  pgadmin-data: